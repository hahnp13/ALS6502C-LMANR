boxplot(resid(lm2) ~ d$spray)  ## variances should be homogeneous for each group
## calculate emmeans
emmeans(lm2, ~spray) ## note that now all means are back-transformed
## calculate back-transformed emmeans
emmeans(lm2, ~spray, type='response') ## note that now all means are back-transformed
## build poisson model ####
## construct a generalized linear model to examine the effect of the different sprays
glm1 <- glmmTMB(count~spray, data=d, family='poisson')  ## glm is a general function that conducts a generalized linear model
Anova(glm1, type=2)  ## car::Anova will print out an ANOVA table testing
summary(glm1)   ## summary() will provide the model coefficients (ie. the "guts" of the model)
## check assumptions of model by examining residuals
hist(resid(glm1)) ## residuals should be normally distributed, but sometimes aren't for GLMs
plot(resid(glm1)~fitted(glm1)) +  ## residuals should be evenly dispersed around 0 across the range of x's
abline(h=0)                               # funnel shapes or curvature is bad
qqPlot(resid(glm1))  ## calls from car package, residuals should line up pretty closely to the blue line
# points that drift from line might be outliers
boxplot(resid(glm1) ~ d$spray)  ## variances should be homogeneous for each group
lm1 <- glmmTMB(count~spray, data=d)
### Anova table ####
Anova(lm1, type=2)  ## car::Anova will print out an ANOVA table testing
### examine coefficients and model components ####
summary(lm1)
### calculate emmeans
emmeans(lm1, ~spray) ## note all the SE are the same and CL seem weird
summary(glm1)   ## summary() will provide the model coefficients (ie. the "guts" of the model)
emmeans(glm1, ~spray) ## emmeans::emmmeans will rebuild the model for you
emmeans(glm1, pairwise~spray, type='response')  ## adding 'pairwise' will conduct pairwise contrasts -- ie. compare each group mean to the others
## compare residuals for normal, log-transformed, and poisson models ####
par(mfrow=c(1,3))
boxplot(resid(lm1) ~ d$spray)
boxplot(resid(lm2) ~ d$spray)
boxplot(resid(glm1) ~ d$spray)
dev.off()
## compare means and SE for normal, log-transformed, and poisson models ####
emmeans(lm1, ~spray)
emmeans(lm2, ~spray, type='response')
emmeans(glm1, ~spray, type='response')
# EXAMPLE FOR NEGATIVE BINOMIAL ####
## build negative binomial model ####
### first check for overdisersion in poisson model ####
check_overdispersion(glm1)
### make nb model ####
glm2 <- glmmTMB(count~spray, data=d, family='nbinom2')
Anova(glm2)
summary(glm2) ## can look at dispersion parameter
AIC(lm1, glm1, glm2)
hist(simulateResiduals(glm2))
AIC(lm1, glm1, glm2)
## check assumptions of model by examining residuals
hist(resid(glm2)) ## residuals should be normally distributed, but sometimes aren't for GLMs
plot(resid(glm2)~fitted(glm2)) +  ## residuals should be evenly dispersed around 0 across the range of x's
abline(h=0)                               # funnel shapes or curvature is bad
qqPlot(resid(glm2))  ## calls from car package, residuals should line up pretty closely to the blue line
# points that drift from line might be outliers
boxplot(resid(glm2) ~ d$spray)  ## variances should be homogeneous for each group
### look at residuals using simulateResiduals from DHARMa package ####
library(DHARMa)
simulateResiduals(glm1, plot=T) ## poisson model
simulateResiduals(glm2, plot=T) ## NB model
hist(simulateResiduals(glm2))
### print means - nearly identical to Poisson in this case ####
emmeans(glm2, ~spray, type='response')
simulateResiduals(lm1, plot=T) ## linear model
simulateResiduals(lm2, plot=T) ## log-linear model
simulateResiduals(glm1, plot=T) ## poisson model
simulateResiduals(glm2, plot=T) ## NB model
### print means - nearly identical to Poisson in this case ####
emmeans(glm2, ~spray, type='response')
#################################################################################################
#### R CHALLENGE 5  ###################################################
library(tidyverse)
library(emmeans)
library(car)
library(agridat)
library(glmmTMB)
library(performance)
data("beall.webworms")
d1 <- beall.webworms
?beall.webworms  ## info about the beall.webworms dataset
head(d1) ## view data set
## examine plot of data
ggplot(d1, aes(x=spray, y=y, fill=lead)) + geom_violin(scale="width", adjust=2) +
geom_point(position = position_jitterdodge(jitter.width=.5, jitter.height=.1, dodge.width = 1), alpha=.1)
library(tidyverse)
library(emmeans)
library(car)
library(agridat)
library(DHARMa)
library(viridis)
# LOAD TITANIC SURVIVAL DATASET ####
data("TitanicSurvival")
t1 <- TitanicSurvival %>% filter(age>17) # filter out children
head(t1)
## plot data ####
ggplot(t1, aes(x=passengerClass, y=survived, color=sex)) + geom_jitter(height=.2, width=0.2)
## construct a generalized linear model to estimate survival as a function of sex and passengerClass. Include Age as co-variate.
tglm1 <- glm(survived ~ sex * passengerClass + age, data=t1, family = binomial(link = "logit"))
## print off anova table
Anova(tglm1)
## print off summary
summary(tglm1)
## Check residuals
hist(tglm1$residuals) ## residuals should be normally distributed, even for glm
plot(tglm1$residuals~tglm1$fitted.values) +  ## residuals should be evenly dispersed around 0 across the range of x's
abline(h=0)                               # funnel shapes or curvature is bad
qqPlot(tglm1$residuals)  ## residuals should line up pretty closely to the blue line
boxplot(tglm1$residuals ~ t1$passengerClass)  ## variances should be homogeneous for each group
## simulate residuals
hist(simulateResiduals(tglm1))
plot(simulateResiduals(tglm1))
## construct a generalized linear model to estimate survival as a function of sex and passengerClass. Include Age as co-variate.
tglm1 <- glmmTMB(survived ~ sex * passengerClass + age, data=t1, family = binomial(link = "logit"))
library(glmmTMB)
## construct a generalized linear model to estimate survival as a function of sex and passengerClass. Include Age as co-variate.
tglm1 <- glmmTMB(survived ~ sex * passengerClass + age, data=t1, family = binomial(link = "logit"))
## print off anova table
Anova(tglm1)
## print off summary
summary(tglm1)
## Check residuals
hist(tglm1$residuals) ## residuals should be normally distributed, even for glm
## Check residuals
hist(residuals(tglm1)) ## residuals should be normally distributed, even for glm
plot(residuals(tglm1)~tglm1$fitted.values) +  ## residuals should be evenly dispersed around 0 across the range of x's
abline(h=0)                               # funnel shapes or curvature is bad
plot(residuals(tglm1)~fitted(tglm1)) +  ## residuals should be evenly dispersed around 0 across the range of x's
abline(h=0)                               # funnel shapes or curvature is bad
qqPlot(residuals(tglm1))  ## residuals should line up pretty closely to the blue line
boxplot(residuals(tglm1) ~ t1$passengerClass)  ## variances should be homogeneous for each group
## simulate residuals
hist(simulateResiduals(tglm1))
plot(simulateResiduals(tglm1))
## print out emmeans
emmeans(tglm1, pairwise ~ sex:passengerClass)
## print out back-transformed means
emmeans(tglm1, pairwise ~ sex:passengerClass, type="response")  ## type= does contrasts before back-transforming (most appropriate!)
#### create new variable that is 0 or 1 for plotting
t1$surv <- if_else(t1$survived=='yes',1,0)
## make plot with regression lines
ggplot(t1, aes(x=age, y=surv, color=sex)) + geom_jitter(height=.1, width=0) +
geom_smooth(method="glm",method.args=list(family="binomial"), formula = y ~ x, se=F, linewidth=1.5) +
facet_wrap(~passengerClass) + theme_bw(base_size = 20)
## make nice plot #####
tm <- emmeans(tglm1, ~ sex:passengerClass, type="response") %>% as.data.frame()
plot1 <- ggplot() +
geom_jitter(data=t1 %>% filter(sex=='female'),
aes(x=passengerClass, y=surv+.01, color=sex),
height=0, width=.25, size=1, alpha=.1) +
geom_jitter(data=t1 %>% filter(sex=='male'),
aes(x=passengerClass, y=surv-.01, color=sex),
height=0, width=.25, size=1, alpha=.1) +
geom_errorbar(data=tm,
aes(x=passengerClass,
y=prob, ymin=(prob-SE),
ymax=(prob+SE), color=sex),
width=.2, lwd=1.25,
position = position_dodge(width=0.5)) +
geom_point(data=tm ,
aes(x=passengerClass, y=prob, color=sex),
size=5, position=position_dodge(width=0.5)) +
scale_y_continuous('survival', labels = scales::percent) +
scale_color_viridis(discrete = T, end=.8) +
theme(panel.background = element_blank(),
panel.border = element_rect(color="black",
fill=NA, linewidth = 2)) +
theme(axis.ticks.length=unit(0.3, "cm"),
axis.text.x =  element_text(margin=margin(5,5,5,5,"pt"),colour="black"),
axis.text.y = element_text(margin=margin(5,5,5,5,"pt"),colour="black")) +  ## change axis tick marks to make them a little longer
#theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
theme(text = element_text(size=20))
plot1
plot2 <- ggplot() +
geom_jitter(data=t1 ,
aes(x=passengerClass, y=surv,
color=passengerClass),
height=.01, width=.35,
size=1, alpha=.2) +
geom_errorbar(data=tm ,
aes(x=passengerClass,
y=prob, ymin=(prob-SE),
ymax=(prob+SE),
color=passengerClass),
width=.2, lwd=1.25) + ## make bars thinner
geom_point(data=tm ,
aes(x=passengerClass,
y=prob, color=passengerClass), size=5) +
facet_wrap(~sex) +
scale_y_continuous('survival', labels = scales::percent) +
scale_color_viridis(discrete = T, option = 'C', direction=-1, end=.85) +
theme(panel.background = element_blank(),
panel.border = element_rect(color="black", fill=NA, linewidth=2)) +
theme(axis.ticks.length=unit(0.3, "cm"),
axis.text.x = element_text(margin=margin(5,5,5,5,"pt"),colour="black"),
axis.text.y = element_text(margin=margin(5,5,5,5,"pt"),colour="black")) +
theme(text = element_text(size=20))
plot2
library(emmeans)
library(car)
library(agridat)
library(DHARMa)
library(performance)
library(glmmTMB)
library(tidyverse)
## load in jansen carrot data and read about the experiment. We will focus only on 'trt' as predictor variables.
## response variables will include 'n' as the number of carrots examined per plot and 'y' as the number infested with fly maggots.
data("jansen.carrot")
?jansen.carrot
force(jansen.carrot)
View(jansen.carrot)
d1 <- jansen.carrot
head(d1)
ggplot(d1, aes(x=trt, y=(y/n))) +
geom_boxplot(outlier.shape=NA)+
geom_jitter(width=.15, height=0) +
xlab("Pest treatment") + ylab("Prop infested w/ fly larvae\n(y/n)") +
theme_bw(base_size = 16)
hist(d1$y/d1$n) ## histogram of distribution
# LOAD AND PROCESS DATA ####
library(tidyverse)   ### load tidyverse
library(car)         ### load car package, which is helpful for analyzing linear models
library(emmeans)     ### load emmeans package, which is helpful for getting means from linear models
library(glmmTMB)
remove.packages("lme4")
install.packages("lme4", type="source")
# ANCOVA ####
#### assemble data with covariate (don't worry about the code...it just makes up some data)##
set.seed(17)
data("InsectSprays")
d <- InsectSprays %>% filter(spray=='A'|spray=='B'|spray=='C'|spray=='F') %>% droplevels()
d$count[13:24] <- d$count[13:24]+5
d$weeds <- abs(round(rnorm(48,2*d$count,10),1))
# LOAD AND PROCESS DATA ####
library(tidyverse)   ### load tidyverse
library(car)         ### load car package, which is helpful for analyzing linear models
library(emmeans)     ### load emmeans package, which is helpful for getting means from linear models
library(glmmTMB)
# ANCOVA ####
#### assemble data with covariate (don't worry about the code...it just makes up some data)##
set.seed(17)
data("InsectSprays")
d <- InsectSprays %>% filter(spray=='A'|spray=='B'|spray=='C'|spray=='F') %>% droplevels()
d$count[13:24] <- d$count[13:24]+5
d$weeds <- abs(round(rnorm(48,2*d$count,10),1))
d$weeds[25:36] <- c(55.3,46.8,30.2,62.3,24.2,33.2,18.2,12.6,39.7,41.0,46.9,42.8)
## plot raw data ####
ggplot(d, aes(x=spray,y=count)) + geom_boxplot(outlier.shape = NA) + geom_jitter(height=0,width=.1)
anova_means <- emmeans(lm(count~spray, data=d), pairwise~spray)
anova_means
## plot out data with weed cover ####
ggplot(d, aes(x=weeds,y=count)) + geom_point() + facet_wrap(~spray) + geom_smooth(method='lm')
lm1i <- glmmTMB(count ~ spray + weeds, data=d)
Anova(lm1i, type=2) ## Anova table with Type II sums of squares
summary(lm1i) ## model coefficients
## calculate estimated marginal mean for each group (ie. groups means after accounting for the effect of weeds)
ancova_means <- emmeans(lm1i, pairwise~spray)
ancova_means
# ANCOVA ####
#### assemble data with covariate (don't worry about the code...it just makes up some data)##
set.seed(17)
data("InsectSprays")
d <- InsectSprays %>% filter(spray=='A'|spray=='B'|spray=='C'|spray=='F') %>% droplevels()
d$count[13:24] <- d$count[13:24]+5
d$weeds <- abs(round(rnorm(48,2*d$count,10),1))
d$weeds[25:36] <- c(55.3,46.8,30.2,62.3,24.2,33.2,18.2,12.6,39.7,41.0,46.9,42.8)
## plot raw data ####
ggplot(d, aes(x=spray,y=count)) + geom_boxplot(outlier.shape = NA) + geom_jitter(height=0,width=.1)
anova_means <- emmeans(lm(count~spray, data=d), pairwise~spray)
anova_means
## plot out data with weed cover ####
ggplot(d, aes(x=weeds,y=count)) + geom_point() + facet_wrap(~spray) + geom_smooth(method='lm')
lm1i <- glmmTMB(count ~ spray + weeds, data=d)
Anova(lm1i, type=2) ## Anova table with Type II sums of squares
summary(lm1i) ## model coefficients
## calculate estimated marginal mean for each group (ie. groups means after accounting for the effect of weeds)
ancova_means <- emmeans(lm1i, pairwise~spray)
ancova_means
## extract the emmean means (ie. group means after accounting for the effect of weeds)
## this code is just for adding features of the model to the graph
lm1i_coef <- as.data.frame(emmeans(lm1i, ~spray))
## extract intercepts and add slopes into new dataframe
lm1i_coef2 <- as.data.frame(emmeans(lm1i, ~spray, at=list(weeds=0)))
lm1i_coef2$slope <- coef(lm1i)[5]
## plot the data with the fitted model
ggplot(data=d, aes(x=weeds,y=count)) + geom_point() + facet_wrap(~spray) +
geom_abline(data=lm1i_coef2, aes(intercept=emmean, slope=slope))+
geom_point(data=lm1i_coef2, aes(x=0,y=emmean),color="red")+
geom_point(data=lm1i_coef, aes(x=mean(d$weeds),y=emmean),color="blue", size=2)
d
lm1i_coef2
emmean
## plot the data with the fitted model
ggplot(data=d, aes(x=weeds,y=count)) + geom_point() + facet_wrap(~spray) +
geom_abline(data=lm1i_coef2, aes(intercept=emmean, slope=slope))+
geom_point(data=lm1i_coef2, aes(x=0,y=emmean),color="red")+
geom_point(data=lm1i_coef, aes(x=mean(d$weeds),y=emmean),color="blue", size=2)
ggplot(data=d, aes(x=weeds,y=count)) + geom_point() + facet_wrap(~spray) +
geom_abline(data=lm1i_coef2, aes(intercept=emmean, slope=slope))
## plot the data with the fitted model
ggplot(data=d, aes(x=weeds,y=count)) + geom_point() + facet_wrap(~spray) +
geom_abline(data=lm1i_coef2, aes(intercept=emmean, slope=slope), color="black")+
geom_point(data=lm1i_coef2, aes(x=0,y=emmean),color="red")+
geom_point(data=lm1i_coef, aes(x=mean(d$weeds),y=emmean),color="blue", size=2)
lm1i_coef2
lm1i
coef(lm1i)[5]
coef(lm1i)
library(broom.mixed)
tidy(lm1i)
tidy(lm1i$estimate)[5]
lm1i$estimate
tidy(lm1i)$estimate
tidy(lm1i)$estimate[5]
lm1i_coef2$slope <- tidy(lm1i)$estimate[5]
## plot the data with the fitted model
ggplot(data=d, aes(x=weeds,y=count)) +
geom_point() +
facet_wrap(~spray) +
geom_abline(data=lm1i_coef2, aes(intercept=emmean, slope=slope))+
geom_point(data=lm1i_coef2, aes(x=0,y=emmean),color="red")+
geom_point(data=lm1i_coef, aes(x=mean(d$weeds),y=emmean),color="blue", size=2)
lm1is <- glmmTMB(count ~ spray + weeds + spray:weeds, data=d)
Anova(lm1is, type=2)
summary(lm1is)
## calculate estimated marginal mean for each group (ie. groups means after accounting for the effect of weeds)
ancova_is_means <- emmeans(lm1is, pairwise~spray)
ancova_is_means
## calculate the slope for each group
ancova_is_slopes <- emtrends(lm1is, pairwise~spray, var="weeds", infer=T)
ancova_is_slopes
lm1i_coef2$slope <- emmtrends(lm1i, ~1)
emtrends(lm1i, ~1)
## extract intercepts and add slopes into new dataframe
lm1i_coef2 <- emmeans(lm1i, ~spray, at=list(weeds=0)) %>% as.data.frame()
lm1i_coef2
emtrends(lm1i, ~1, var="weeds")
lm1i_coef2$slope <- emtrends(lm1i, ~1, var="weeds") %>% dplyr::select(weeds.trend)
lm1i_coef2$slope <- emtrends(lm1i, ~1, var="weeds") %>% as.data.frame() %>% dplyr::select(weeds.trend)
emtrends(lm1i, ~1, var="weeds") %>% as.data.frame()
emtrends(lm1i, ~1, var="weeds") %>% as.data.frame() %>% dplyr::select(weeds.trend)
lm1i_coef2$slope <- tidy(lm1i)$estimate[5]
## plot the data with the fitted model
ggplot(data=d, aes(x=weeds,y=count)) +
geom_point() +
facet_wrap(~spray) +
geom_abline(data=lm1i_coef2, aes(intercept=emmean, slope=slope))+
geom_point(data=lm1i_coef2, aes(x=0,y=emmean),color="red")+
geom_point(data=lm1i_coef, aes(x=mean(d$weeds),y=emmean),color="blue", size=2)
lm1is <- glmmTMB(count ~ spray + weeds + spray:weeds, data=d)
Anova(lm1is, type=2)
summary(lm1is)
## calculate estimated marginal mean for each group (ie. groups means after accounting for the effect of weeds)
ancova_is_means <- emmeans(lm1is, pairwise~spray)
ancova_is_means
## calculate the slope for each group
ancova_is_slopes <- emtrends(lm1is, pairwise~spray, var="weeds", infer=T)
ancova_is_slopes
## extract the emmean means (ie. group means after accounting for the effect of weeds)
lm1is_coef <- as.data.frame(emmeans(lm1is, ~spray))
## extract intercepts and add slopes into new dataframe
lm1is_coef2a <- as.data.frame(emmeans(lm1is, ~spray, at=list(weeds=0)))
lm1is_coef2b <- as.data.frame(emtrends(lm1is, var="weeds"))
lm1is_coef2 <- full_join(lm1is_coef2a,lm1is_coef2b,by="spray")
## plot the data with the fitted model
ggplot(data=d, aes(x=weeds,y=count)) + geom_point() + facet_wrap(~spray) +
geom_abline(data=lm1is_coef2, aes(intercept=emmean, slope=weeds.trend), lty=2)+
geom_point(data=lm1is_coef2, aes(x=0,y=emmean),color="orange")+
geom_point(data=lm1is_coef, aes(x=mean(d$weeds),y=emmean),color="purple", size=2)
# nice plot out data with weed cover ####
ggplot(d, aes(x=weeds,y=count)) + geom_point() + facet_wrap(~spray) +
geom_smooth(method='lm', color='black')+theme_bw(base_size = 16)
# LOAD AND PROCESS DATA ####
library(tidyverse)   ### load tidyverse
library(car)         ### load car package, which is helpful for analyzing linear models
library(emmeans)     ### load emmeans package, which is helpful for getting means from linear models
library(glmmTMB)
library(broom.mixed)
# ANCOVA ####
#### assemble data with covariate (don't worry about the code...it just makes up some data)##
set.seed(17)
data("InsectSprays")
d <- InsectSprays %>% filter(spray=='A'|spray=='B'|spray=='C'|spray=='F') %>% droplevels()
d$count[13:24] <- d$count[13:24]+5
d$weeds <- abs(round(rnorm(48,2*d$count,10),1))
d$weeds[25:36] <- c(55.3,46.8,30.2,62.3,24.2,33.2,18.2,12.6,39.7,41.0,46.9,42.8)
## plot raw data ####
ggplot(d, aes(x=spray,y=count)) + geom_boxplot(outlier.shape = NA) + geom_jitter(height=0,width=.1)
anova_means <- emmeans(lm(count~spray, data=d), pairwise~spray)
anova_means
## plot out data with weed cover ####
ggplot(d, aes(x=weeds,y=count)) + geom_point() + facet_wrap(~spray) + geom_smooth(method='lm')
lm1i <- glmmTMB(count ~ spray + weeds, data=d)
Anova(lm1i, type=2) ## Anova table with Type II sums of squares
summary(lm1i) ## model coefficients
## calculate estimated marginal mean for each group (ie. groups means after accounting for the effect of weeds)
ancova_means <- emmeans(lm1i, pairwise~spray)
ancova_means
## plot raw data ####
ggplot(d, aes(x=spray,y=count)) + geom_boxplot(outlier.shape = NA) + geom_jitter(height=0,width=.1)
anova_means
lm1i <- glmmTMB(count ~ spray + weeds, data=d)
Anova(lm1i, type=2) ## Anova table with Type II sums of squares
lm1i <- glmmTMB(count ~ spray + weeds, data=d)
Anova(lm1i, type=2) ## Anova table with Type II sums of squares
summary(lm1i) ## model coefficients
## calculate estimated marginal mean for each group (ie. groups means after accounting for the effect of weeds)
ancova_means <- emmeans(lm1i, pairwise~spray)
ancova_means
## extract the emmean means (ie. group means after accounting for the effect of weeds)
## this code is just for adding features of the model to the graph
lm1i_coef <- as.data.frame(emmeans(lm1i, ~spray))
## extract intercepts and add slopes into new dataframe
lm1i_coef2 <- as.data.frame(emmeans(lm1i, ~spray, at=list(weeds=0)))
lm1i_coef2$slope <- tidy(lm1i)$estimate[5]
## plot the data with the fitted model
ggplot(data=d, aes(x=weeds,y=count)) +
geom_point() +
facet_wrap(~spray) +
geom_abline(data=lm1i_coef2, aes(intercept=emmean, slope=slope))+
geom_point(data=lm1i_coef2, aes(x=0,y=emmean),color="red")+
geom_point(data=lm1i_coef, aes(x=mean(d$weeds),y=emmean),color="blue", size=2)
lm1is <- glmmTMB(count ~ spray + weeds + spray:weeds, data=d)
Anova(lm1is, type=2)
summary(lm1is)
## calculate the slope for each group
ancova_is_slopes <- emtrends(lm1is, pairwise~spray, var="weeds", infer=T)
ancova_is_slopes
## calculate estimated marginal mean for each group (ie. groups means after accounting for the effect of weeds)
ancova_is_means <- emmeans(lm1is, pairwise~spray)
ancova_is_means
## calculate the slope for each group
ancova_is_slopes <- emtrends(lm1is, pairwise~spray, var="weeds", infer=T)
ancova_is_slopes
# nice plot out data with weed cover ####
ggplot(d, aes(x=weeds,y=count)) + geom_point() + facet_wrap(~spray) +
geom_smooth(method='lm', color='black')+theme_bw(base_size = 16)
## LOAD AND PROCESSES DATA
library(tidyverse)
library(car)
library(glmmTMB)
data("InsectSprays")
InsectSprays$block <- as.factor(rep(c(1,2,3,4,5,6,7,8,9,10,11,12), 6)) # add blocks
d <- InsectSprays %>% filter(spray=='A'|spray=='B'|spray=='C'|spray=='F')
#plot data by treatment group
ggplot(d, aes(x=spray,y=count)) + geom_boxplot(outlier.shape = NA) + geom_jitter(height=0,width=.1)
#plot data by treatment and block -- note one observation per block
ggplot(d, aes(x=spray,y=count)) + geom_boxplot(outlier.shape = NA) + geom_jitter(height=0,width=.1) + facet_wrap(~block)  #12 blocks
### construct and compare linear models with and without blocking
## no block model
lm1 <- glmmTMB(count~spray, data=d)
Anova(lm1)
### construct and compare linear models with and without blocking
## no block model
lm1 <- lm(count~spray, data=d)
Anova(lm1)
## block as fixed effect
lm2 <- lm(count~spray+block, data=d)
Anova(lm2)
## block as random effect
lm3 <- glmmTMB(count~spray+(1|block), data=d)
Anova(lm3)
### alterantive is to use lme4::lmer and lmerTest::anova to see ddf's
lm3a <- lmer(count ~ spray+(1|block), data=d)
library(lme4)
### alterantive is to use lme4::lmer and lmerTest::anova to see ddf's
library(lme4)
lm3a <- lmer(count ~ spray+(1|block), data=d)
anova(lm3a)
library(lmerTest)
anova(lm3a)
lm3a <- lmer(count ~ spray+(1|block), data=d)
anova(lm3a)
#### compare summary() for fixed vs. random blocking effect
summary(lm2)
summary(lm3)
coef(lm3)    ## prints model coefficients
print(VarCorr(lm3), comp=c("Variance"))  ## print variance components from model
plot(resid(lm1) ~ fitted(lm1)) ### check residuals of no block and block models
plot(resid(lm3) ~ fitted(lm3))
hist(resid(lm1))
hist(resid(lm3))
#### compare estimated marginal means
library(emmeans)
emmeans(lm2, pairwise~spray) ## fixed effect block
emmeans(lm3, pairwise~spray) ## random effect block
coef(lm3)    ## prints model coefficients
#### R CHALLENGE 7 ####
library(tidyverse)
library(car)
library(emmeans)
library(glmmTMB)
## load in the ChickWeight dataset. It contains weight (g) of small chickens grown on four different diets.
## Chickens were weighed every few days for 21 days. Don't worry about the 'Chick' column for this challenge
data("ChickWeight")
ChickWeight$Diet <- as.factor(ChickWeight$Diet)
?ChickWeight
## plot out data
ggplot(ChickWeight, aes(x=Time,y=weight))+geom_point()+facet_wrap(~Diet)+geom_smooth(method="lm")
# LOAD AND PROCESS DATA ####
library(tidyverse)   ### load tidyverse
library(car)         ### load car package, which is helpful for analyzing linear models
library(emmeans)     ### load emmeans package, which is helpful for getting means from linear models
library(glmmTMB)
library(broom.mixed) ### INSTALL and load
# ANCOVA ####
#### assemble data with covariate (don't worry about the code...it just makes up some data)##
set.seed(17)
data("InsectSprays")
d <- InsectSprays %>% filter(spray=='A'|spray=='B'|spray=='C'|spray=='F') %>% droplevels()
d$count[13:24] <- d$count[13:24]+5
d$weeds <- abs(round(rnorm(48,2*d$count,10),1))
d$weeds[25:36] <- c(55.3,46.8,30.2,62.3,24.2,33.2,18.2,12.6,39.7,41.0,46.9,42.8)
mean(d$weeds)
